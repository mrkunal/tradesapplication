package org.balaji.multiplex.commons.domain;

import lombok.Data;
import org.bson.types.ObjectId;
import org.springframework.data.annotation.*;
import org.springframework.data.mongodb.core.mapping.Field;

import java.util.Date;

@Data
public abstract class BaseEntity{

	@Id
	public ObjectId id;

	@Field("createdDate")
	@CreatedDate
	public Date createdDate;

	@Field("lastUpdatedDate")
	@LastModifiedDate
	public Date lastUpdatedDate;

	@Field("createdBy")
	@CreatedBy
	public String createdBy;

	@Field("lastUpdatedBy")
	@LastModifiedBy
	public String lastUpdatedBy;

	@Field("isDeleted")
	public Boolean isDeleted = false;

	@Field("isActive")
	public Boolean isActive = true;

	public boolean isNew() {
		/**
		 * Assuming the Id is generated by database. If not, then need to override in
		 * each model depending on how to identify if a Model is a new one or already
		 * saved Model.
		 **/
		return id == null;
	}

/*	public BaseEntity(BaseEntity baseEntity) {
		super();
		this.id = baseEntity.id;
		this.createdDate = baseEntity.createdDate;
		this.lastUpdatedDate = baseEntity.lastUpdatedDate;
		this.createdBy = baseEntity.createdBy;
		this.lastUpdatedBy = baseEntity.lastUpdatedBy;
		this.isDeleted = baseEntity.isDeleted;
		this.isActive = baseEntity.isActive;
	}*/
}
